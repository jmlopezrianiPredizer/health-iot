version: "3.8"

services:
  sensor-rest:
    build: ./sensors
    command: python sensor_rest.py
    depends_on: [gateway]
    networks:
      - iot-net
  sensor-grpc:
    build: ./sensors
    command: python sensor_grpc.py
    depends_on: [gateway]
    networks:
      - iot-net
  sensor-socket:
    build: ./sensors
    command: python sensor_socket.py
    depends_on: [gateway]
    networks:
      - iot-net


  # 2) Gateway: accepts WebSocket from sensors + publishes to MQTT
  gateway:
    build: ./gateway
    container_name: gateway
    ports:
      - "5000:5000"       # REST endpoint
      - "50051:50051"     # gRPC endpoint
      - "5002:5002"       # WebSocket endpoint
    depends_on:
      - mqtt
    networks:
      - iot-net

  # 3) MQTT broker
  mqtt:
    image: eclipse-mosquitto:2.0
    container_name: mqtt-broker
    ports:
      - "1883:1883"
    volumes:
      - ./broker/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - ./broker/persistence:/broker/persistence
      - ./broker/logs:/broker/logs
    networks:
      - iot-net

  # 4) Subscriber: reads from MQTT and writes to Postgres
  subscriber:
    build: ./subscriber
    container_name: subscriber
    depends_on:
      db:
        condition: service_healthy
      mqtt:
        condition: service_started
    networks:
      - iot-net
    command: python sub.py
    restart: on-failure

  # 5) Postgres
  db:
    image: postgres:15
    container_name: postgres-db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: 12345
      POSTGRES_DB: iotdata
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - iot-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d iotdata"]
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  iot-net:

volumes:
  pgdata:
